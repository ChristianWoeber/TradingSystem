//------------------------------------------------------------------------------
// <auto-generated>
//     Dieser Code wurde von einem Tool generiert.
//     Laufzeitversion:4.0.30319.42000
//
//     Änderungen an dieser Datei können falsches Verhalten verursachen und gehen verloren, wenn
//     der Code erneut generiert wird.
// </auto-generated>
//------------------------------------------------------------------------------

namespace TradingSystemTests {
    using System;
    
    
    /// <summary>
    ///   Eine stark typisierte Ressourcenklasse zum Suchen von lokalisierten Zeichenfolgen usw.
    /// </summary>
    // Diese Klasse wurde von der StronglyTypedResourceBuilder automatisch generiert
    // -Klasse über ein Tool wie ResGen oder Visual Studio automatisch generiert.
    // Um einen Member hinzuzufügen oder zu entfernen, bearbeiten Sie die .ResX-Datei und führen dann ResGen
    // mit der /str-Option erneut aus, oder Sie erstellen Ihr VS-Projekt neu.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Resource {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resource() {
        }
        
        /// <summary>
        ///   Gibt die zwischengespeicherte ResourceManager-Instanz zurück, die von dieser Klasse verwendet wird.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("TradingSystemTests.Resource", typeof(Resource).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Überschreibt die CurrentUICulture-Eigenschaft des aktuellen Threads für alle
        ///   Ressourcenzuordnungen, die diese stark typisierte Ressourcenklasse verwenden.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 17.11.1995;9,67000008
        ///20.11.1995;9,52299976
        ///21.11.1995;9,40799999
        ///22.11.1995;9,56099987
        ///23.11.1995;9,65100002
        ///24.11.1995;9,84200001
        ///27.11.1995;9,89299965
        ///28.11.1995;9,81000042
        ///29.11.1995;9,79800034
        ///30.11.1995;10,06000042
        ///01.12.1995;10,08500004
        ///04.12.1995;9,92500019
        ///05.12.1995;9,86200047
        ///06.12.1995;9,71500015
        ///07.12.1995;9,81700039
        ///08.12.1995;9,8039999
        ///11.12.1995;9,625
        ///12.12.1995;9,68299961
        ///13.12.1995;9,66300011
        ///14.12.1995;9,54800034
        ///15.12.1995;9,34500027
        ///18.12.1995;9,01200008
        ///19.12.1995 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AdidasHistory {
            get {
                return ResourceManager.GetString("AdidasHistory", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 17.11.1995;9,67000008
        ///20.11.1995;9,52299976
        ///21.11.1995;9,40799999
        ///22.11.1995;9,56099987
        ///23.11.1995;9,65100002
        ///24.11.1995;9,84200001
        ///27.11.1995;9,89299965
        ///28.11.1995;9,81000042
        ///29.11.1995;9,79800034
        ///30.11.1995;10,06000042
        ///01.12.1995;10,08500004
        ///04.12.1995;9,92500019
        ///05.12.1995;9,86200047
        ///06.12.1995;9,71500015
        ///07.12.1995;9,81700039
        ///08.12.1995;9,8039999
        ///11.12.1995;9,625
        ///12.12.1995;9,68299961
        ///13.12.1995;9,66300011
        ///14.12.1995;9,54800034
        ///15.12.1995;9,34500027
        ///18.12.1995;9,01200008
        ///19.12.1995 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AdidasHistoryMissingItems {
            get {
                return ResourceManager.GetString("AdidasHistoryMissingItems", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-02-02T00:00:00&quot;,
        ///          &quot;Price&quot;: 42.86,
        ///  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_02_02_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_02_02_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-03-08T00:00:00&quot;,
        ///          &quot;Price&quot;: 71.19,
        ///  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_08_03_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_08_03_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-10-11T00:00:00&quot;,
        ///          &quot;Price&quot;: 61.400001 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_11_10_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_11_10_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-02-16T00:00:00&quot;,
        ///          &quot;Price&quot;: 50.19,
        ///  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_16_02_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_16_02_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-01-19T00:00:00&quot;,
        ///          &quot;Price&quot;: 38.57,
        ///  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_19_01_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_19_01_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-01-04T00:00:00&quot;,
        ///          &quot;Price&quot;: 3.118446, [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string AllCandidates_CleanUpCash05_01_2000 {
            get {
                return ResourceManager.GetString("AllCandidates_CleanUpCash05_01_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-02-02T00:00:00&quot;,
        ///          &quot;Price&quot;: 51.408000 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BestCandidates_02_02_2000 {
            get {
                return ResourceManager.GetString("BestCandidates_02_02_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-03-08T00:00:00&quot;,
        ///          &quot;Price&quot;: 160.64999 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BestCandidates_08_03_2000 {
            get {
                return ResourceManager.GetString("BestCandidates_08_03_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: []
        ///} ähnelt.
        /// </summary>
        internal static string BestCandidates_11_10_2000 {
            get {
                return ResourceManager.GetString("BestCandidates_11_10_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-02-16T00:00:00&quot;,
        ///          &quot;Price&quot;: 108.46700 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BestCandidates_16_02_2000 {
            get {
                return ResourceManager.GetString("BestCandidates_16_02_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die {
        ///  &quot;$type&quot;: &quot;System.Collections.Generic.List`1[[Trading.DataStructures.Interfaces.ITradingCandidate, Trading.DataStructures]], mscorlib&quot;,
        ///  &quot;$values&quot;: [
        ///    {
        ///      &quot;$type&quot;: &quot;HelperLibrary.Trading.TradingCandidate, HelperLibrary&quot;,
        ///      &quot;_tradingCandidateBase&quot;: {
        ///        &quot;$type&quot;: &quot;HelperLibrary.Trading.Candidate, HelperLibrary&quot;,
        ///        &quot;Record&quot;: {
        ///          &quot;$type&quot;: &quot;HelperLibrary.Database.Models.TradingRecord, HelperLibrary&quot;,
        ///          &quot;Asof&quot;: &quot;2000-01-19T00:00:00&quot;,
        ///          &quot;Price&quot;: 45.75,
        ///  [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string BestCandidates_19_01_2000 {
            get {
                return ResourceManager.GetString("BestCandidates_19_01_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DateTime;SecurityId;Shares;EffectiveAmountEur;Type;Cancelled;TargetWeight
        ///01.10.2017;1;30;30000;1;0;0.10;
        ///01.10.2017;2;30;30000;1;0;0.10;
        ///01.10.2017;3;30;30000;1;0;0.10;
        ///01.10.2017;4;30;30000;1;0;0.10;
        ///01.10.2017;5;30;30000;1;0;0.10;
        ///01.10.2017;6;30;30000;1;0;0.10;
        ///01.10.2017;7;30;30000;1;0;0.10;
        ///01.10.2017;8;30;30000;1;0;0.10;
        ///01.10.2017;9;30;30000;1;0;0.10;
        ///01.10.2017;10;30;30000;1;0;0.10;
        ///
        ///04.10.2017;10;-15;-12000;3;0;0.05;
        ///04.10.2017;9;-15;-10000;3;0;0.05;
        ///04.10.2017;11;10;30000;1;0;0.10;        /// [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string CashTest {
            get {
                return ResourceManager.GetString("CashTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die 26.10.1998;67,874
        ///27.10.1998;67,158
        ///28.10.1998;65,445
        ///29.10.1998;64,934
        ///30.10.1998;66,468
        ///02.11.1998;68,59
        ///03.11.1998;66,724
        ///04.11.1998;69,28
        ///05.11.1998;70,712
        ///06.11.1998;71,274
        ///09.11.1998;68,718
        ///10.11.1998;65,701
        ///11.11.1998;66,212
        ///12.11.1998;67,388
        ///13.11.1998;67,235
        ///16.11.1998;71,939
        ///17.11.1998;71,172
        ///18.11.1998;71,99
        ///19.11.1998;75,773
        ///20.11.1998;78,483
        ///23.11.1998;80,912
        ///24.11.1998;80,043
        ///25.11.1998;78,228
        ///26.11.1998;81,398
        ///27.11.1998;82,216
        ///30.11.1998;81,449
        ///01.12.1998;77,819
        ///02 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Daimler {
            get {
                return ResourceManager.GetString("Daimler", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Ressource vom Typ System.Byte[].
        /// </summary>
        internal static byte[] EuroStoxx50Member {
            get {
                object obj = ResourceManager.GetObject("EuroStoxx50Member", resourceCulture);
                return ((byte[])(obj));
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DateTime;SecurityId;Shares;AmountEur;Type;Cancelled;TargetWeight
        ///01.10.2017;1;30;30000;1;0;0.10;
        ///01.10.2017;2;30;30000;1;0;0.10;
        ///01.10.2017;3;30;30000;1;0;0.10;
        ///01.10.2017;4;30;30000;1;0;0.10;
        ///01.10.2017;5;30;30000;1;0;0.10;
        ///01.10.2017;6;30;30000;1;0;0.10;
        ///01.10.2017;7;30;30000;1;0;0.10;
        ///01.10.2017;8;30;30000;1;0;0.10;
        ///01.10.2017;9;30;30000;1;0;0.10;
        ///01.10.2017;10;30;30000;1;0;0.10;
        ///
        ///04.10.2017;10;-15;12000;3;0;0.05;
        ///04.10.2017;9;-15;10000;3;0;0.05;
        ///04.10.2017;11;10;30000;1;0;0.10;
        ///
        ///
        /// ähnelt.
        /// </summary>
        internal static string GetCurrentTransactionsTest {
            get {
                return ResourceManager.GetString("GetCurrentTransactionsTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DateTime;SecurityId;Shares;AmountEur;Type;Cancelled;TargetWeight
        ///01.10.2017;1;30;30000;1;0;0.10;
        ///01.10.2017;2;30;30000;1;0;0.10;
        ///01.10.2017;3;30;30000;1;0;0.10;
        ///01.10.2017;4;30;30000;1;0;0.10;
        ///01.10.2017;5;30;30000;1;0;0.10;
        ///01.10.2017;6;30;30000;1;0;0.10;
        ///01.10.2017;7;30;30000;1;0;0.10;
        ///01.10.2017;8;30;30000;1;0;0.10;
        ///01.10.2017;9;30;30000;1;0;0.10;
        ///01.10.2017;10;30;30000;1;0;0.10;
        ///
        ///04.10.2017;10;-15;12000;3;0;0.05;
        ///04.10.2017;9;-15;10000;3;0;0.05;
        ///04.10.2017;11;10;30000;1;0;0.10;
        ///
        ///08.10.20 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string GetTransactionTest {
            get {
                return ResourceManager.GetString("GetTransactionTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Asof;Price;SecurityId;AdjustedPrice
        ///03.01.1995 00:00:00;4.13097318191529;401666;4.13097318191529
        ///04.01.1995 00:00:00;4.03873032407761;401666;4.03873032407761
        ///05.01.1995 00:00:00;3.88080866374969;401666;3.88080866374969
        ///06.01.1995 00:00:00;4.10966706781387;401666;4.10966706781387
        ///09.01.1995 00:00:00;4.28755638728142;401666;4.28755638728142
        ///10.01.1995 00:00:00;4.50882382135392;401666;4.50882382135392
        ///11.01.1995 00:00:00;4.4380602370739;401666;4.4380602370739
        ///12.01.1995 00:00:00;4.35534625244141;401666 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string MICROCHIP_TECHNOLOGY {
            get {
                return ResourceManager.GetString("MICROCHIP_TECHNOLOGY", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Asof;Price;SecurityId;AdjustedPrice
        ///02.01.1990 00:00:00;48.3109;703;48.3109
        ///03.01.1990 00:00:00;48.9337;703;48.9337
        ///04.01.1990 00:00:00;48.9236;703;48.9236
        ///05.01.1990 00:00:00;48.3030;703;48.3030
        ///08.01.1990 00:00:00;47.8783;703;47.8783
        ///09.01.1990 00:00:00;47.5016;703;47.5016
        ///10.01.1990 00:00:00;47.0211;703;47.0211
        ///11.01.1990 00:00:00;47.4505;703;47.4505
        ///12.01.1990 00:00:00;46.7514;703;46.7514
        ///15.01.1990 00:00:00;46.4642;703;46.4642
        ///16.01.1990 00:00:00;46.5888;703;46.5888
        ///17.01.1990 00:00:00;46.1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string MSCIWorldEur {
            get {
                return ResourceManager.GetString("MSCIWorldEur", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Asof;Price;SecurityId;AdjustedPrice
        ///21.01.1999 00:00:00;0.8639;417857;0.8639
        ///22.01.1999 00:00:00;1.41386908;417857;1.41386908
        ///25.01.1999 00:00:00;1.5641875;417857;1.5641875
        ///26.01.1999 00:00:00;1.44502317;417857;1.44502317
        ///27.01.1999 00:00:00;1.44736228;417857;1.44736228
        ///28.01.1999 00:00:00;1.45597245;417857;1.45597245
        ///29.01.1999 00:00:00;1.39061239;417857;1.39061239
        ///01.02.1999 00:00:00;1.42310844;417857;1.42310844
        ///02.02.1999 00:00:00;1.31591264;417857;1.31591264
        ///03.02.1999 00:00:00;1.34164976;4178 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string NVIDIA {
            get {
                return ResourceManager.GetString("NVIDIA", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TransactionDateTime;SecurityId;Shares;TargetAmountEur;TransactionType;Cancelled;TargetWeight;EffectiveWeight;EffectiveAmountEur
        ///05.01.2000 00:00:00;39;344;10000.0;1;0;0.1;0.1000;10000.08
        ///05.01.2000 00:00:00;40;304;10000.0;1;0;0.1;0.1000;9996.5232
        ///05.01.2000 00:00:00;16;253;10000.0;1;0;0.1;0.0999;9994.2586
        ///05.01.2000 00:00:00;11;153;10000.0;1;0;0.1;0.0998;9983.25
        ///05.01.2000 00:00:00;14;497;10000.0;1;0;0.1;0.1000;9996.658
        ///05.01.2000 00:00:00;23;128;10000.0;1;0;0.1;0.0994;9943.0400
        ///05.01.2000 00:00:00;1 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string RebalancePortfolioTestFile {
            get {
                return ResourceManager.GetString("RebalancePortfolioTestFile", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die Asof;Price;SecurityId;AdjustedPrice
        ///03.01.1995 00:00:00;7.7;404131;7.7
        ///04.01.1995 00:00:00;7.66;404131;7.66
        ///05.01.1995 00:00:00;7.66;404131;7.66
        ///06.01.1995 00:00:00;7.64;404131;7.64
        ///09.01.1995 00:00:00;7.6;404131;7.6
        ///10.01.1995 00:00:00;7.56;404131;7.56
        ///11.01.1995 00:00:00;7.55;404131;7.55
        ///12.01.1995 00:00:00;7.55;404131;7.55
        ///13.01.1995 00:00:00;7.52;404131;7.52
        ///16.01.1995 00:00:00;7.52;404131;7.52
        ///17.01.1995 00:00:00;7.52;404131;7.52
        ///18.01.1995 00:00:00;7.52;404131;7.52
        ///19.01.1995 00:00:00;7.5 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string SAFRAN {
            get {
                return ResourceManager.GetString("SAFRAN", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TransactionDateTime;SecurityId;Shares;AmountEur;TransactionType;Cancelled;TargetWeight;EffectiveWeight
        ///11.10.2016 00:00:00;8;125;10000.0;1;0;0.1;0.0995
        ///11.10.2016 00:00:00;16;487;10000.0;1;0;0.1;0.0999
        ///11.10.2016 00:00:00;13;60;10000.0;1;0;0.1;0.0985
        ///11.10.2016 00:00:00;9;205;10000.0;1;0;0.1;0.0995
        ///11.10.2016 00:00:00;14;890;10000.0;1;0;0.1;0.1000
        ///11.10.2016 00:00:00;19;890;10000.0;1;0;0.1;0.1000
        ///11.10.2016 00:00:00;2;95;10000.0;1;0;0.1;0.0994
        ///11.10.2016 00:00:00;12;155;10000.0;1;0;0.1;0.0995
        ///11.10 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string SetIntialTransactionsTest {
            get {
                return ResourceManager.GetString("SetIntialTransactionsTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TransactionDateTime;SecurityId;Shares;TargetAmountEur;TransactionType;Cancelled;TargetWeight;EffectiveWeight;EffectiveAmountEur
        ///05.01.2000 00:00:00;39;343;10000.0;1;0;0.1;0.0997;9971.01
        ///05.01.2000 00:00:00;16;253;10000.0;1;0;0.1;0.0999;9994.2586
        ///05.01.2000 00:00:00;40;304;10000.0;1;0;0.1;0.1000;9996.5232
        ///05.01.2000 00:00:00;11;153;10000.0;1;0;0.1;0.0998;9983.25
        ///05.01.2000 00:00:00;14;497;10000.0;1;0;0.1;0.1000;9996.658
        ///05.01.2000 00:00:00;1;131;10000.0;1;0;0.1;0.1000;9999.6230
        ///05.01.2000 00:00:00;23; [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string Transactions_05_01_2000 {
            get {
                return ResourceManager.GetString("Transactions_05_01_2000", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die DateTime;SecurityId;Shares;AmountEur;Type;Cancelled;TargetWeight
        ///01.10.2017;1;30;30000;1;0;0.10;
        ///01.10.2017;2;30;30000;1;0;0.10;
        ///01.10.2017;3;30;30000;1;0;0.10;
        ///01.10.2017;4;30;30000;1;0;0.10;
        ///01.10.2017;5;30;30000;1;0;0.10;
        ///01.10.2017;6;30;30000;1;0;0.10;
        ///01.10.2017;7;30;30000;1;0;0.10;
        ///01.10.2017;8;30;30000;1;0;0.10;
        ///01.10.2017;9;30;30000;1;0;0.10;
        ///01.10.2017;10;30;30000;1;0;0.10;
        ///
        ///
        ///04.10.2017;10;-15;12000;10;2;0;0.5;
        ///04.10.2017;9;-15;10000;9;2;0;0.5;
        ///04.10.2017;11;10;30000;1;0;0.10;
        ///
        ///
        ///0 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string TransactionsHistoryTest {
            get {
                return ResourceManager.GetString("TransactionsHistoryTest", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Sucht eine lokalisierte Zeichenfolge, die TicketFee;TransactionDateTime;SecurityId;Shares;TargetAmountEur;TransactionType;Cancelled;TargetWeight;EffectiveWeight;EffectiveAmountEur
        ///35;05.01.2000 00:00:00;39;343;10000.0;1;0;0.1;0.0997;9971.01
        ///35;05.01.2000 00:00:00;16;253;10000.0;1;0;0.1;0.0999;9994.2586
        ///35;05.01.2000 00:00:00;40;304;10000.0;1;0;0.1;0.1000;9996.5232
        ///35;05.01.2000 00:00:00;11;153;10000.0;1;0;0.1;0.0998;9983.25
        ///35;05.01.2000 00:00:00;14;497;10000.0;1;0;0.1;0.1000;9996.658
        ///35;05.01.2000 00:00:00;1;131;10000.0;1;0;0.1;0.1000;9999.6 [Rest der Zeichenfolge wurde abgeschnitten]&quot;; ähnelt.
        /// </summary>
        internal static string WriteToFileTest {
            get {
                return ResourceManager.GetString("WriteToFileTest", resourceCulture);
            }
        }
    }
}
